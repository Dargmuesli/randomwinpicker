{
    "Owner": "dargmuesli",
    "RegistryAddress": {
        "Name": "registry",
        "Hostname": "localhost",
        "Port": "5000"
    },
    "ComposeFile": {
        "Name": "docker-compose.yml",
        "Content": {
            "version": "3",
            "services": {
                "apache": {
                    "image": "localhost:5000/dargmuesli/randomwinpicker.de",
                    "deploy": {
                        "replicas": 1,
                        "restart_policy": {
                            "condition": "on-failure"
                        }
                    },
                    "ports": [
                        "80:80",
                        "443:443"
                    ],
                    "volumes": [
                        "./dist/randomwinpicker.de:/var/www/randomwinpicker.de"
                    ]
                },
                "postgres": {
                    "image": "postgres",
                    "environment": {
                        "POSTGRES_USER": "${POSTGRES_USER}",
                        "POSTGRES_PASSWORD": "${POSTGRES_PASSWORD}",
                        "POSTGRES_DB": "randomwinpicker.de"
                    },
                    "volumes": [
                        "postgres-data:/var/lib/postgresql/data"
                    ]
                },
                "adminer": {
                    "image": "adminer",
                    "ports": [
                        "8888:8080"
                    ]
                },
                "visualizer": {
                    "image": "dockersamples/visualizer:stable",
                    "ports": [
                        "8080:8080"
                    ],
                    "volumes": [
                        "/var/run/docker.sock:/var/run/docker.sock"
                    ],
                    "deploy": {
                        "placement": {
                            "constraints": [
                                "node.role == manager"
                            ]
                        }
                    }
                }
            },
            "volumes": {
                "postgres-data": {}
            }
        }
    }
}
